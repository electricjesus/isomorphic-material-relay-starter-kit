type Mutation {
  Viewer_update(input: Viewer_updateInput!): Viewer_updatePayload
  Viewer_updatePassword(input: Viewer_updatePasswordInput!): Viewer_updatePasswordPayload
}

interface Node {
  id: ID!
}

type Query {
  node(id: ID!): Node
  Viewer: Viewer
}

type Viewer implements Node {
  id: ID!
  User_IsAnonymous: Boolean
  User_DisplayName: String
  User_ProfilePhoto: String
  User_Email: String
  User_Locale: String
  User_AuthToken: String
}

input Viewer_updateInput {
  id: ID!
  User_DisplayName: String!
  User_ProfilePhoto: String!
  User_Email: String!
  User_Locale: String!
  clientMutationId: String!
}

input Viewer_updatePasswordInput {
  id: ID!
  User_Password: String!
  clientMutationId: String!
}

type Viewer_updatePasswordPayload {
  Viewer: Viewer
  clientMutationId: String!
}

type Viewer_updatePayload {
  Viewer: Viewer
  clientMutationId: String!
}
